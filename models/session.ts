/*
Klarna Payments API V1

The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).

**Note:** Examples provided in this section includes full payloads, including all supported fields , required and optionals. In order to implement a best in class request we recommend you don't include customer details when initiating a payment session. Refer to [Initiate a payment](https://docs.klarna.com/klarna-payments/integrate-with-klarna-payments/step-1-initiate-a-payment/) section for further details.

Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Address } from './address';
import { Attachment } from './attachment';
import { Customer } from './customer';
import { MerchantUrls } from './merchant-urls';
import { Options } from './options';
import { OrderLine } from './order-line';
import { PaymentMethodCategory } from './payment-method-category';

/**
 * 
 * @export
 * @interface Session
 */
export interface Session {
    /**
     * The acquiring channel in which the session takes place. Ecommerce is default unless specified. Any other values should be defined in the agreement.
     * @type {string}
     * @memberof Session
     */
    'acquiring_channel'?: SessionAcquiringChannelEnum;
    /**
     * 
     * @type {Attachment}
     * @memberof Session
     */
    'attachment'?: Attachment;
    /**
     * Authorization token.
     * @type {string}
     * @memberof Session
     */
    'authorization_token'?: string;
    /**
     * 
     * @type {Address}
     * @memberof Session
     */
    'billing_address'?: Address;
    /**
     * Token to be passed to the JS client
     * @type {string}
     * @memberof Session
     */
    'client_token'?: string;
    /**
     * Promo codes - The array could be used to define which of the configured payment options within a payment category (pay_later, pay_over_time, etc.) should be shown for this purchase. Discuss with the delivery manager to know about the promo codes that will be configured for your account. The feature could also be used to provide promotional offers to specific customers (eg: 0% financing). Please be informed that the usage of this feature can have commercial implications. 
     * @type {Array<string>}
     * @memberof Session
     */
    'custom_payment_method_ids'?: Array<string>;
    /**
     * 
     * @type {Customer}
     * @memberof Session
     */
    'customer'?: Customer;
    /**
     * Design package to use in the session. This can only by used if a custom design has been implemented for Klarna Payments and agreed upon in the agreement. It might have a financial impact. Delivery manager will provide the value for the parameter.
     * @type {string}
     * @memberof Session
     */
    'design'?: string;
    /**
     * Session expiration date
     * @type {string}
     * @memberof Session
     */
    'expires_at'?: string;
    /**
     * Used to define the language and region of the customer. The locale follows the format of [RFC 1766](https://datatracker.ietf.org/doc/rfc1766/), meaning its value consists of language-country. Read more on **[Supported Locals and Currencies](https://docs.klarna.com/klarna-payments/in-depth-knowledge/puchase-countries-currencies-locales/)**.
     * @type {string}
     * @memberof Session
     */
    'locale'?: string;
    /**
     * Pass through field to send any information about the order to be used later for reference while retrieving the order details (max 6000 characters)
     * @type {string}
     * @memberof Session
     */
    'merchant_data'?: string;
    /**
     * Used for storing merchant\'s internal order number or other reference.
     * @type {string}
     * @memberof Session
     */
    'merchant_reference1'?: string;
    /**
     * Used for storing merchant\'s internal order number or other reference. The value is available in the settlement files. (max 255 characters).
     * @type {string}
     * @memberof Session
     */
    'merchant_reference2'?: string;
    /**
     * 
     * @type {MerchantUrls}
     * @memberof Session
     */
    'merchant_urls'?: MerchantUrls;
    /**
     * 
     * @type {Options}
     * @memberof Session
     */
    'options'?: Options;
    /**
     * Total amount of the order including tax and any available discounts. The value should be in non-negative minor units. Eg: 25 Euros should be 2500.
     * @type {number}
     * @memberof Session
     */
    'order_amount'?: number;
    /**
     * The array containing list of line items that are part of this order. Maximum of 1000 line items could be processed in a single order.
     * @type {Array<OrderLine>}
     * @memberof Session
     */
    'order_lines'?: Array<OrderLine>;
    /**
     * Total tax amount of the order. The value should be in non-negative minor units. Eg: 25 Euros should be 2500.
     * @type {number}
     * @memberof Session
     */
    'order_tax_amount'?: number;
    /**
     * Available payment method categories
     * @type {Set<PaymentMethodCategory>}
     * @memberof Session
     */
    'payment_method_categories'?: Set<PaymentMethodCategory>;
    /**
     * The purchase country of the customer. The billing country always overrides purchase country if the values are different. Formatted according to ISO 3166 alpha-2 standard, e.g. GB, SE, DE, US, etc.
     * @type {string}
     * @memberof Session
     */
    'purchase_country'?: string;
    /**
     * The purchase currency of the order. Formatted according to ISO 4217 standard, e.g. USD, EUR, SEK, GBP, etc.
     * @type {string}
     * @memberof Session
     */
    'purchase_currency'?: string;
    /**
     * 
     * @type {Address}
     * @memberof Session
     */
    'shipping_address'?: Address;
    /**
     * The current status of the session. Possible values: \'complete\', \'incomplete\' where \'complete\' is set when the order has been placed.
     * @type {string}
     * @memberof Session
     */
    'status'?: SessionStatusEnum;
    /**
     * Intent for the session. The field is designed to let partners inform Klarna of the purpose of the customerâ€™s session.
     * @type {string}
     * @memberof Session
     */
    'intent'?: SessionIntentEnum;
}

type SessionAcquiringChannelEnum = 'ECOMMERCE' | 'IN_STORE' | 'TELESALES'
type SessionStatusEnum = 'complete' | 'incomplete'
type SessionIntentEnum = 'buy' | 'tokenize' | 'buy_and_tokenize'


